---
- hosts: all
  become: true
  become_method: sudo
  vars:
    libanno_user: "vagrant"
    libanno_path: "/vagrant"
    vagrant_home: "/home/vagrant"
    virtualenv_path: "/home/vagrant/libanno-env"

  tasks:
    - name: Check Ubuntu 18.04 running
      assert:
        that:
          - ansible_distribution == 'Ubuntu'
          - ansible_distribution_release == 'bionic'

    - name: update apt cache
      apt: update_cache=yes

    - name: install Python
      apt: name={{item}} state=latest
      with_items:
        - python
        - python-dev
        - python-virtualenv
        - python-setuptools
        - python-pip

    - name: upgrade pip
      become_user: "{{libanno_user}}"
      pip: name=pip state=latest chdir={{libanno_path}} virtualenv={{virtualenv_path}} virtualenv_site_packages=yes

    - name: install LibAnno virtualenv packages
      become_user: "{{libanno_user}}"
      pip: chdir={{libanno_path}} requirements={{libanno_path}}/requirements.txt virtualenv={{virtualenv_path}} virtualenv_site_packages=yes

    - name: check alembic.ini exists
      stat: path={{libanno_path}}/alembic.ini
      register: check_alembic

    - name: copy alembic template when it does not exist
      command: cp -p {{libanno_path}}/alembic.ini.tmpl {{libanno_path}}/alembic.ini
      when: not check_alembic.stat.exists

    - name: check settings.py exists
      stat: path={{libanno_path}}/settings.py
      register: check_settings

    - name: copy settings template when it does not exist
      command: cp -p {{libanno_path}}/settings.py.tmpl {{libanno_path}}/settings.py
      when: not check_settings.stat.exists

    - name: install PostgreSQL
      apt: name={{item}} state=latest
      with_items:
        - postgresql
        - postgresql-server-dev-all
        - libpq-dev
        - python-psycopg2

    - name: start PostgreSQL service
      service: name=postgresql state=started

    # http://stackoverflow.com/a/16783253
    # psql -lqt | cut -d \| -f 1 | grep -w <db_name>
    - name: check if DB already exists
      become_user: postgres
      shell: "psql -lqt | cut -d \\| -f 1 | grep -w libanno"
      register: libanno_db_exists
      changed_when: False
      failed_when: not (libanno_db_exists.rc == 0 or libanno_db_exists.rc == 1)

    - name: create LibAnno DB user
      become_user: postgres
      postgresql_user: name=libanno password=tester encrypted=yes role_attr_flags=CREATEDB,NOSUPERUSER

    - name: create LibAnno DB test user
      become_user: postgres
      postgresql_user: name=rtester password=rtester encrypted=yes role_attr_flags=CREATEDB,NOSUPERUSER

    - name: create LibAnno DB
      become_user: postgres
      postgresql_db: name=libanno
                     owner=libanno
                     encoding='UTF-8'
                     lc_collate='en_US.UTF-8'
                     lc_ctype='en_US.UTF-8'
                     template='template0'

    - name: create LibAnno Test DB
      become_user: postgres
      postgresql_db: name=libanno_test
                     owner=rtester
                     encoding='UTF-8'
                     lc_collate='en_US.UTF-8'
                     lc_ctype='en_US.UTF-8'
                     template='template0'

    - name: populate LibAnno DB
      become_user: "{{libanno_user}}"
      command: "{{virtualenv_path}}/bin/python bin/db_create.py"
      args:
        chdir: "{{libanno_path}}"
      when: libanno_db_exists.rc != 0

    # activate virtualenv always in .bashrc
    - name: virtualenv usage by default on bash login
      become_user: "{{libanno_user}}"
      lineinfile:
        dest={{vagrant_home}}/.bashrc
        line=". {{virtualenv_path}}/bin/activate"
        owner=vagrant
        state=present
        insertafter=EOF
        create=yes

    - name: go to /vagrant directory on bash login
      lineinfile:
        dest={{vagrant_home}}/.bashrc
        line="cd {{libanno_path}}"
        owner=vagrant
        state=present
        insertafter=EOF
